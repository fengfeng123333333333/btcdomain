{"version":3,"file":"js/492.01645173.js","mappings":"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","sources":["webpack://new_btcdomain_vue3/../../src/utils/isBrowser.js","webpack://new_btcdomain_vue3/../../src/utils/debounce.js","webpack://new_btcdomain_vue3/../../src/utils/isFunction.js","webpack://new_btcdomain_vue3/../../src/utils/getStyleComputedProperty.js","webpack://new_btcdomain_vue3/../../src/utils/getParentNode.js","webpack://new_btcdomain_vue3/../../src/utils/getScrollParent.js","webpack://new_btcdomain_vue3/../../src/utils/getReferenceNode.js","webpack://new_btcdomain_vue3/../../src/utils/isIE.js","webpack://new_btcdomain_vue3/../../src/utils/getOffsetParent.js","webpack://new_btcdomain_vue3/../../src/utils/isOffsetContainer.js","webpack://new_btcdomain_vue3/../../src/utils/getRoot.js","webpack://new_btcdomain_vue3/../../src/utils/findCommonOffsetParent.js","webpack://new_btcdomain_vue3/../../src/utils/getScroll.js","webpack://new_btcdomain_vue3/../../src/utils/includeScroll.js","webpack://new_btcdomain_vue3/../../src/utils/getBordersSize.js","webpack://new_btcdomain_vue3/../../src/utils/getWindowSizes.js","webpack://new_btcdomain_vue3/../../src/utils/getClientRect.js","webpack://new_btcdomain_vue3/../../src/utils/getBoundingClientRect.js","webpack://new_btcdomain_vue3/../../src/utils/getOffsetRectRelativeToArbitraryNode.js","webpack://new_btcdomain_vue3/../../src/utils/getViewportOffsetRectRelativeToArtbitraryNode.js","webpack://new_btcdomain_vue3/../../src/utils/isFixed.js","webpack://new_btcdomain_vue3/../../src/utils/getFixedPositionOffsetParent.js","webpack://new_btcdomain_vue3/../../src/utils/getBoundaries.js","webpack://new_btcdomain_vue3/../../src/utils/computeAutoPlacement.js","webpack://new_btcdomain_vue3/../../src/utils/getReferenceOffsets.js","webpack://new_btcdomain_vue3/../../src/utils/getOuterSizes.js","webpack://new_btcdomain_vue3/../../src/utils/getOppositePlacement.js","webpack://new_btcdomain_vue3/../../src/utils/getPopperOffsets.js","webpack://new_btcdomain_vue3/../../src/utils/find.js","webpack://new_btcdomain_vue3/../../src/utils/findIndex.js","webpack://new_btcdomain_vue3/../../src/utils/runModifiers.js","webpack://new_btcdomain_vue3/../../src/methods/update.js","webpack://new_btcdomain_vue3/../../src/utils/isModifierEnabled.js","webpack://new_btcdomain_vue3/../../src/utils/getSupportedPropertyName.js","webpack://new_btcdomain_vue3/../../src/methods/destroy.js","webpack://new_btcdomain_vue3/../../src/utils/getWindow.js","webpack://new_btcdomain_vue3/../../src/utils/setupEventListeners.js","webpack://new_btcdomain_vue3/../../src/methods/enableEventListeners.js","webpack://new_btcdomain_vue3/../../src/utils/removeEventListeners.js","webpack://new_btcdomain_vue3/../../src/methods/disableEventListeners.js","webpack://new_btcdomain_vue3/../../src/utils/isNumeric.js","webpack://new_btcdomain_vue3/../../src/utils/setStyles.js","webpack://new_btcdomain_vue3/../../src/utils/setAttributes.js","webpack://new_btcdomain_vue3/../../src/modifiers/applyStyle.js","webpack://new_btcdomain_vue3/../../src/utils/getRoundedOffsets.js","webpack://new_btcdomain_vue3/../../src/modifiers/computeStyle.js","webpack://new_btcdomain_vue3/../../src/utils/isModifierRequired.js","webpack://new_btcdomain_vue3/../../src/modifiers/arrow.js","webpack://new_btcdomain_vue3/../../src/utils/getOppositeVariation.js","webpack://new_btcdomain_vue3/../../src/methods/placements.js","webpack://new_btcdomain_vue3/../../src/utils/clockwise.js","webpack://new_btcdomain_vue3/../../src/modifiers/flip.js","webpack://new_btcdomain_vue3/../../src/modifiers/keepTogether.js","webpack://new_btcdomain_vue3/../../src/modifiers/offset.js","webpack://new_btcdomain_vue3/../../src/modifiers/preventOverflow.js","webpack://new_btcdomain_vue3/../../src/modifiers/shift.js","webpack://new_btcdomain_vue3/../../src/modifiers/hide.js","webpack://new_btcdomain_vue3/../../src/modifiers/inner.js","webpack://new_btcdomain_vue3/../../src/modifiers/index.js","webpack://new_btcdomain_vue3/../../src/methods/defaults.js","webpack://new_btcdomain_vue3/../../src/index.js","webpack://new_btcdomain_vue3/./node_modules/view-ui-plus/src/components/icon/index.js","webpack://new_btcdomain_vue3/./node_modules/view-ui-plus/src/components/icon/icon.vue","webpack://new_btcdomain_vue3/./node_modules/view-ui-plus/src/components/icon/icon.vue?00c6"],"sourcesContent":["export default typeof window !== 'undefined' && typeof document !== 'undefined' && typeof navigator !== 'undefined';\n","import isBrowser from './isBrowser';\n\nconst timeoutDuration = (function(){\n  const longerTimeoutBrowsers = ['Edge', 'Trident', 'Firefox'];\n  for (let i = 0; i < longerTimeoutBrowsers.length; i += 1) {\n    if (isBrowser && navigator.userAgent.indexOf(longerTimeoutBrowsers[i]) >= 0) {\n      return 1;\n    }\n  }\n  return 0;\n}());\n\nexport function microtaskDebounce(fn) {\n  let called = false\n  return () => {\n    if (called) {\n      return\n    }\n    called = true\n    window.Promise.resolve().then(() => {\n      called = false\n      fn()\n    })\n  }\n}\n\nexport function taskDebounce(fn) {\n  let scheduled = false;\n  return () => {\n    if (!scheduled) {\n      scheduled = true;\n      setTimeout(() => {\n        scheduled = false;\n        fn();\n      }, timeoutDuration);\n    }\n  };\n}\n\nconst supportsMicroTasks = isBrowser && window.Promise\n\n\n/**\n* Create a debounced version of a method, that's asynchronously deferred\n* but called in the minimum time possible.\n*\n* @method\n* @memberof Popper.Utils\n* @argument {Function} fn\n* @returns {Function}\n*/\nexport default (supportsMicroTasks\n  ? microtaskDebounce\n  : taskDebounce);\n","/**\n * Check if the given variable is a function\n * @method\n * @memberof Popper.Utils\n * @argument {Any} functionToCheck - variable to check\n * @returns {Boolean} answer to: is a function?\n */\nexport default function isFunction(functionToCheck) {\n  const getType = {};\n  return (\n    functionToCheck &&\n    getType.toString.call(functionToCheck) === '[object Function]'\n  );\n}\n","/**\n * Get CSS computed property of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Eement} element\n * @argument {String} property\n */\nexport default function getStyleComputedProperty(element, property) {\n  if (element.nodeType !== 1) {\n    return [];\n  }\n  // NOTE: 1 DOM access here\n  const window = element.ownerDocument.defaultView;\n  const css = window.getComputedStyle(element, null);\n  return property ? css[property] : css;\n}\n","/**\n * Returns the parentNode or the host of the element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} parent\n */\nexport default function getParentNode(element) {\n  if (element.nodeName === 'HTML') {\n    return element;\n  }\n  return element.parentNode || element.host;\n}\n","import getStyleComputedProperty from './getStyleComputedProperty';\nimport getParentNode from './getParentNode';\n\n/**\n * Returns the scrolling parent of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} scroll parent\n */\nexport default function getScrollParent(element) {\n  // Return body, `getScroll` will take care to get the correct `scrollTop` from it\n  if (!element) {\n    return document.body\n  }\n\n  switch (element.nodeName) {\n    case 'HTML':\n    case 'BODY':\n      return element.ownerDocument.body\n    case '#document':\n      return element.body\n  }\n\n  // Firefox want us to check `-x` and `-y` variations as well\n  const { overflow, overflowX, overflowY } = getStyleComputedProperty(element);\n  if (/(auto|scroll|overlay)/.test(overflow + overflowY + overflowX)) {\n    return element;\n  }\n\n  return getScrollParent(getParentNode(element));\n}\n","/**\n * Returns the reference node of the reference object, or the reference object itself.\n * @method\n * @memberof Popper.Utils\n * @param {Element|Object} reference - the reference element (the popper will be relative to this)\n * @returns {Element} parent\n */\nexport default function getReferenceNode(reference) {\n  return reference && reference.referenceNode ? reference.referenceNode : reference;\n}\n","import isBrowser from './isBrowser';\n\nconst isIE11 = isBrowser && !!(window.MSInputMethodContext && document.documentMode);\nconst isIE10 = isBrowser && /MSIE 10/.test(navigator.userAgent);\n\n/**\n * Determines if the browser is Internet Explorer\n * @method\n * @memberof Popper.Utils\n * @param {Number} version to check\n * @returns {Boolean} isIE\n */\nexport default function isIE(version) {\n  if (version === 11) {\n    return isIE11;\n  }\n  if (version === 10) {\n    return isIE10;\n  }\n  return isIE11 || isIE10;\n}\n","import getStyleComputedProperty from './getStyleComputedProperty';\nimport isIE from './isIE';\n/**\n * Returns the offset parent of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} offset parent\n */\nexport default function getOffsetParent(element) {\n  if (!element) {\n    return document.documentElement;\n  }\n\n  const noOffsetParent = isIE(10) ? document.body : null;\n\n  // NOTE: 1 DOM access here\n  let offsetParent = element.offsetParent || null;\n  // Skip hidden elements which don't have an offsetParent\n  while (offsetParent === noOffsetParent && element.nextElementSibling) {\n    offsetParent = (element = element.nextElementSibling).offsetParent;\n  }\n\n  const nodeName = offsetParent && offsetParent.nodeName;\n\n  if (!nodeName || nodeName === 'BODY' || nodeName === 'HTML') {\n    return element ? element.ownerDocument.documentElement : document.documentElement;\n  }\n\n  // .offsetParent will return the closest TH, TD or TABLE in case\n  // no offsetParent is present, I hate this job...\n  if (\n    ['TH', 'TD', 'TABLE'].indexOf(offsetParent.nodeName) !== -1 &&\n    getStyleComputedProperty(offsetParent, 'position') === 'static'\n  ) {\n    return getOffsetParent(offsetParent);\n  }\n\n  return offsetParent;\n}\n","import getOffsetParent from './getOffsetParent';\n\nexport default function isOffsetContainer(element) {\n  const { nodeName } = element;\n  if (nodeName === 'BODY') {\n    return false;\n  }\n  return (\n    nodeName === 'HTML' || getOffsetParent(element.firstElementChild) === element\n  );\n}\n","/**\n * Finds the root node (document, shadowDOM root) of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} node\n * @returns {Element} root node\n */\nexport default function getRoot(node) {\n  if (node.parentNode !== null) {\n    return getRoot(node.parentNode);\n  }\n\n  return node;\n}\n","import isOffsetContainer from './isOffsetContainer';\nimport getRoot from './getRoot';\nimport getOffsetParent from './getOffsetParent';\n\n/**\n * Finds the offset parent common to the two provided nodes\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element1\n * @argument {Element} element2\n * @returns {Element} common offset parent\n */\nexport default function findCommonOffsetParent(element1, element2) {\n  // This check is needed to avoid errors in case one of the elements isn't defined for any reason\n  if (!element1 || !element1.nodeType || !element2 || !element2.nodeType) {\n    return document.documentElement;\n  }\n\n  // Here we make sure to give as \"start\" the element that comes first in the DOM\n  const order =\n    element1.compareDocumentPosition(element2) &\n    Node.DOCUMENT_POSITION_FOLLOWING;\n  const start = order ? element1 : element2;\n  const end = order ? element2 : element1;\n\n  // Get common ancestor container\n  const range = document.createRange();\n  range.setStart(start, 0);\n  range.setEnd(end, 0);\n  const { commonAncestorContainer } = range;\n\n  // Both nodes are inside #document\n  if (\n    (element1 !== commonAncestorContainer &&\n      element2 !== commonAncestorContainer) ||\n    start.contains(end)\n  ) {\n    if (isOffsetContainer(commonAncestorContainer)) {\n      return commonAncestorContainer;\n    }\n\n    return getOffsetParent(commonAncestorContainer);\n  }\n\n  // one of the nodes is inside shadowDOM, find which one\n  const element1root = getRoot(element1);\n  if (element1root.host) {\n    return findCommonOffsetParent(element1root.host, element2);\n  } else {\n    return findCommonOffsetParent(element1, getRoot(element2).host);\n  }\n}\n","/**\n * Gets the scroll value of the given element in the given side (top and left)\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @argument {String} side `top` or `left`\n * @returns {number} amount of scrolled pixels\n */\nexport default function getScroll(element, side = 'top') {\n  const upperSide = side === 'top' ? 'scrollTop' : 'scrollLeft';\n  const nodeName = element.nodeName;\n\n  if (nodeName === 'BODY' || nodeName === 'HTML') {\n    const html = element.ownerDocument.documentElement;\n    const scrollingElement = element.ownerDocument.scrollingElement || html;\n    return scrollingElement[upperSide];\n  }\n\n  return element[upperSide];\n}\n","import getScroll from './getScroll';\n\n/*\n * Sum or subtract the element scroll values (left and top) from a given rect object\n * @method\n * @memberof Popper.Utils\n * @param {Object} rect - Rect object you want to change\n * @param {HTMLElement} element - The element from the function reads the scroll values\n * @param {Boolean} subtract - set to true if you want to subtract the scroll values\n * @return {Object} rect - The modifier rect object\n */\nexport default function includeScroll(rect, element, subtract = false) {\n  const scrollTop = getScroll(element, 'top');\n  const scrollLeft = getScroll(element, 'left');\n  const modifier = subtract ? -1 : 1;\n  rect.top += scrollTop * modifier;\n  rect.bottom += scrollTop * modifier;\n  rect.left += scrollLeft * modifier;\n  rect.right += scrollLeft * modifier;\n  return rect;\n}\n","/*\n * Helper to detect borders of a given element\n * @method\n * @memberof Popper.Utils\n * @param {CSSStyleDeclaration} styles\n * Result of `getStyleComputedProperty` on the given element\n * @param {String} axis - `x` or `y`\n * @return {number} borders - The borders size of the given axis\n */\n\nexport default function getBordersSize(styles, axis) {\n  const sideA = axis === 'x' ? 'Left' : 'Top';\n  const sideB = sideA === 'Left' ? 'Right' : 'Bottom';\n\n  return (\n    parseFloat(styles[`border${sideA}Width`]) +\n    parseFloat(styles[`border${sideB}Width`])\n  );\n}\n","import isIE from './isIE';\n\nfunction getSize(axis, body, html, computedStyle) {\n  return Math.max(\n    body[`offset${axis}`],\n    body[`scroll${axis}`],\n    html[`client${axis}`],\n    html[`offset${axis}`],\n    html[`scroll${axis}`],\n    isIE(10)\n      ? (parseInt(html[`offset${axis}`]) + \n      parseInt(computedStyle[`margin${axis === 'Height' ? 'Top' : 'Left'}`]) + \n      parseInt(computedStyle[`margin${axis === 'Height' ? 'Bottom' : 'Right'}`]))\n    : 0 \n  );\n}\n\nexport default function getWindowSizes(document) {\n  const body = document.body;\n  const html = document.documentElement;\n  const computedStyle = isIE(10) && getComputedStyle(html);\n\n  return {\n    height: getSize('Height', body, html, computedStyle),\n    width: getSize('Width', body, html, computedStyle),\n  };\n}\n","/**\n * Given element offsets, generate an output similar to getBoundingClientRect\n * @method\n * @memberof Popper.Utils\n * @argument {Object} offsets\n * @returns {Object} ClientRect like output\n */\nexport default function getClientRect(offsets) {\n  return {\n    ...offsets,\n    right: offsets.left + offsets.width,\n    bottom: offsets.top + offsets.height,\n  };\n}\n","import getStyleComputedProperty from './getStyleComputedProperty';\nimport getBordersSize from './getBordersSize';\nimport getWindowSizes from './getWindowSizes';\nimport getScroll from './getScroll';\nimport getClientRect from './getClientRect';\nimport isIE from './isIE';\n\n/**\n * Get bounding client rect of given element\n * @method\n * @memberof Popper.Utils\n * @param {HTMLElement} element\n * @return {Object} client rect\n */\nexport default function getBoundingClientRect(element) {\n  let rect = {};\n\n  // IE10 10 FIX: Please, don't ask, the element isn't\n  // considered in DOM in some circumstances...\n  // This isn't reproducible in IE10 compatibility mode of IE11\n  try {\n    if (isIE(10)) {\n      rect = element.getBoundingClientRect();\n      const scrollTop = getScroll(element, 'top');\n      const scrollLeft = getScroll(element, 'left');\n      rect.top += scrollTop;\n      rect.left += scrollLeft;\n      rect.bottom += scrollTop;\n      rect.right += scrollLeft;\n    }\n    else {\n      rect = element.getBoundingClientRect();\n    }\n  }\n  catch(e){}\n\n  const result = {\n    left: rect.left,\n    top: rect.top,\n    width: rect.right - rect.left,\n    height: rect.bottom - rect.top,\n  };\n\n  // subtract scrollbar size from sizes\n  const sizes = element.nodeName === 'HTML' ? getWindowSizes(element.ownerDocument) : {};\n  const width =\n    sizes.width || element.clientWidth || result.width;\n  const height =\n    sizes.height || element.clientHeight || result.height;\n\n  let horizScrollbar = element.offsetWidth - width;\n  let vertScrollbar = element.offsetHeight - height;\n\n  // if an hypothetical scrollbar is detected, we must be sure it's not a `border`\n  // we make this check conditional for performance reasons\n  if (horizScrollbar || vertScrollbar) {\n    const styles = getStyleComputedProperty(element);\n    horizScrollbar -= getBordersSize(styles, 'x');\n    vertScrollbar -= getBordersSize(styles, 'y');\n\n    result.width -= horizScrollbar;\n    result.height -= vertScrollbar;\n  }\n\n  return getClientRect(result);\n}\n","import getStyleComputedProperty from './getStyleComputedProperty';\nimport includeScroll from './includeScroll';\nimport getScrollParent from './getScrollParent';\nimport getBoundingClientRect from './getBoundingClientRect';\nimport runIsIE from './isIE';\nimport getClientRect from './getClientRect';\n\nexport default function getOffsetRectRelativeToArbitraryNode(children, parent, fixedPosition = false) {\n  const isIE10 = runIsIE(10);\n  const isHTML = parent.nodeName === 'HTML';\n  const childrenRect = getBoundingClientRect(children);\n  const parentRect = getBoundingClientRect(parent);\n  const scrollParent = getScrollParent(children);\n\n  const styles = getStyleComputedProperty(parent);\n  const borderTopWidth = parseFloat(styles.borderTopWidth);\n  const borderLeftWidth = parseFloat(styles.borderLeftWidth);\n\n  // In cases where the parent is fixed, we must ignore negative scroll in offset calc\n  if(fixedPosition && isHTML) {\n    parentRect.top = Math.max(parentRect.top, 0);\n    parentRect.left = Math.max(parentRect.left, 0);\n  }\n  let offsets = getClientRect({\n    top: childrenRect.top - parentRect.top - borderTopWidth,\n    left: childrenRect.left - parentRect.left - borderLeftWidth,\n    width: childrenRect.width,\n    height: childrenRect.height,\n  });\n  offsets.marginTop = 0;\n  offsets.marginLeft = 0;\n\n  // Subtract margins of documentElement in case it's being used as parent\n  // we do this only on HTML because it's the only element that behaves\n  // differently when margins are applied to it. The margins are included in\n  // the box of the documentElement, in the other cases not.\n  if (!isIE10 && isHTML) {\n    const marginTop = parseFloat(styles.marginTop);\n    const marginLeft = parseFloat(styles.marginLeft);\n\n    offsets.top -= borderTopWidth - marginTop;\n    offsets.bottom -= borderTopWidth - marginTop;\n    offsets.left -= borderLeftWidth - marginLeft;\n    offsets.right -= borderLeftWidth - marginLeft;\n\n    // Attach marginTop and marginLeft because in some circumstances we may need them\n    offsets.marginTop = marginTop;\n    offsets.marginLeft = marginLeft;\n  }\n\n  if (\n    isIE10 && !fixedPosition\n      ? parent.contains(scrollParent)\n      : parent === scrollParent && scrollParent.nodeName !== 'BODY'\n  ) {\n    offsets = includeScroll(offsets, parent);\n  }\n\n  return offsets;\n}\n","import getOffsetRectRelativeToArbitraryNode from './getOffsetRectRelativeToArbitraryNode';\nimport getScroll from './getScroll';\nimport getClientRect from './getClientRect';\n\nexport default function getViewportOffsetRectRelativeToArtbitraryNode(element, excludeScroll = false) {\n  const html = element.ownerDocument.documentElement;\n  const relativeOffset = getOffsetRectRelativeToArbitraryNode(element, html);\n  const width = Math.max(html.clientWidth, window.innerWidth || 0);\n  const height = Math.max(html.clientHeight, window.innerHeight || 0);\n\n  const scrollTop = !excludeScroll ? getScroll(html) : 0;\n  const scrollLeft = !excludeScroll ? getScroll(html, 'left') : 0;\n\n  const offset = {\n    top: scrollTop - relativeOffset.top + relativeOffset.marginTop,\n    left: scrollLeft - relativeOffset.left + relativeOffset.marginLeft,\n    width,\n    height,\n  };\n\n  return getClientRect(offset);\n}\n","import getStyleComputedProperty from './getStyleComputedProperty';\nimport getParentNode from './getParentNode';\n\n/**\n * Check if the given element is fixed or is inside a fixed parent\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @argument {Element} customContainer\n * @returns {Boolean} answer to \"isFixed?\"\n */\nexport default function isFixed(element) {\n  const nodeName = element.nodeName;\n  if (nodeName === 'BODY' || nodeName === 'HTML') {\n    return false;\n  }\n  if (getStyleComputedProperty(element, 'position') === 'fixed') {\n    return true;\n  }\n  const parentNode = getParentNode(element);\n  if (!parentNode) {\n    return false;\n  }\n  return isFixed(parentNode);\n}\n","import getStyleComputedProperty from './getStyleComputedProperty';\nimport isIE from './isIE';\n/**\n * Finds the first parent of an element that has a transformed property defined\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} first transformed parent or documentElement\n */\n\nexport default function getFixedPositionOffsetParent(element) {\n  // This check is needed to avoid errors in case one of the elements isn't defined for any reason\n   if (!element || !element.parentElement || isIE()) {\n    return document.documentElement;\n  }\n  let el = element.parentElement;\n  while (el && getStyleComputedProperty(el, 'transform') === 'none') {\n    el = el.parentElement;\n  }\n  return el || document.documentElement;\n\n}\n","import getScrollParent from './getScrollParent';\nimport getParentNode from './getParentNode';\nimport getReferenceNode from './getReferenceNode';\nimport findCommonOffsetParent from './findCommonOffsetParent';\nimport getOffsetRectRelativeToArbitraryNode from './getOffsetRectRelativeToArbitraryNode';\nimport getViewportOffsetRectRelativeToArtbitraryNode from './getViewportOffsetRectRelativeToArtbitraryNode';\nimport getWindowSizes from './getWindowSizes';\nimport isFixed from './isFixed';\nimport getFixedPositionOffsetParent from './getFixedPositionOffsetParent';\n\n/**\n * Computed the boundaries limits and return them\n * @method\n * @memberof Popper.Utils\n * @param {HTMLElement} popper\n * @param {HTMLElement} reference\n * @param {number} padding\n * @param {HTMLElement} boundariesElement - Element used to define the boundaries\n * @param {Boolean} fixedPosition - Is in fixed position mode\n * @returns {Object} Coordinates of the boundaries\n */\nexport default function getBoundaries(\n  popper,\n  reference,\n  padding,\n  boundariesElement,\n  fixedPosition = false\n) {\n  // NOTE: 1 DOM access here\n\n  let boundaries = { top: 0, left: 0 };\n  const offsetParent = fixedPosition ? getFixedPositionOffsetParent(popper) : findCommonOffsetParent(popper, getReferenceNode(reference));\n\n  // Handle viewport case\n  if (boundariesElement === 'viewport' ) {\n    boundaries = getViewportOffsetRectRelativeToArtbitraryNode(offsetParent, fixedPosition);\n  }\n\n  else {\n    // Handle other cases based on DOM element used as boundaries\n    let boundariesNode;\n    if (boundariesElement === 'scrollParent') {\n      boundariesNode = getScrollParent(getParentNode(reference));\n      if (boundariesNode.nodeName === 'BODY') {\n        boundariesNode = popper.ownerDocument.documentElement;\n      }\n    } else if (boundariesElement === 'window') {\n      boundariesNode = popper.ownerDocument.documentElement;\n    } else {\n      boundariesNode = boundariesElement;\n    }\n\n    const offsets = getOffsetRectRelativeToArbitraryNode(\n      boundariesNode,\n      offsetParent,\n      fixedPosition\n    );\n\n    // In case of HTML, we need a different computation\n    if (boundariesNode.nodeName === 'HTML' && !isFixed(offsetParent)) {\n      const { height, width } = getWindowSizes(popper.ownerDocument);\n      boundaries.top += offsets.top - offsets.marginTop;\n      boundaries.bottom = height + offsets.top;\n      boundaries.left += offsets.left - offsets.marginLeft;\n      boundaries.right = width + offsets.left;\n    } else {\n      // for all the other DOM elements, this one is good\n      boundaries = offsets;\n    }\n  }\n\n  // Add paddings\n  padding = padding || 0;\n  const isPaddingNumber = typeof padding === 'number';\n  boundaries.left += isPaddingNumber ? padding : padding.left || 0; \n  boundaries.top += isPaddingNumber ? padding : padding.top || 0; \n  boundaries.right -= isPaddingNumber ? padding : padding.right || 0; \n  boundaries.bottom -= isPaddingNumber ? padding : padding.bottom || 0; \n\n  return boundaries;\n}\n","import getBoundaries from '../utils/getBoundaries';\n\nfunction getArea({ width, height }) {\n  return width * height;\n}\n\n/**\n * Utility used to transform the `auto` placement to the placement with more\n * available space.\n * @method\n * @memberof Popper.Utils\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nexport default function computeAutoPlacement(\n  placement,\n  refRect,\n  popper,\n  reference,\n  boundariesElement,\n  padding = 0\n) {\n  if (placement.indexOf('auto') === -1) {\n    return placement;\n  }\n\n  const boundaries = getBoundaries(\n    popper,\n    reference,\n    padding,\n    boundariesElement\n  );\n\n  const rects = {\n    top: {\n      width: boundaries.width,\n      height: refRect.top - boundaries.top,\n    },\n    right: {\n      width: boundaries.right - refRect.right,\n      height: boundaries.height,\n    },\n    bottom: {\n      width: boundaries.width,\n      height: boundaries.bottom - refRect.bottom,\n    },\n    left: {\n      width: refRect.left - boundaries.left,\n      height: boundaries.height,\n    },\n  };\n\n  const sortedAreas = Object.keys(rects)\n    .map(key => ({\n      key,\n      ...rects[key],\n      area: getArea(rects[key]),\n    }))\n    .sort((a, b) => b.area - a.area);\n\n  const filteredAreas = sortedAreas.filter(\n    ({ width, height }) =>\n      width >= popper.clientWidth && height >= popper.clientHeight\n  );\n\n  const computedPlacement = filteredAreas.length > 0\n    ? filteredAreas[0].key\n    : sortedAreas[0].key;\n\n  const variation = placement.split('-')[1];\n\n  return computedPlacement + (variation ? `-${variation}` : '');\n}\n","import findCommonOffsetParent from './findCommonOffsetParent';\nimport getOffsetRectRelativeToArbitraryNode from './getOffsetRectRelativeToArbitraryNode';\nimport getFixedPositionOffsetParent from './getFixedPositionOffsetParent';\nimport getReferenceNode from './getReferenceNode';\n\n/**\n * Get offsets to the reference element\n * @method\n * @memberof Popper.Utils\n * @param {Object} state\n * @param {Element} popper - the popper element\n * @param {Element} reference - the reference element (the popper will be relative to this)\n * @param {Element} fixedPosition - is in fixed position mode\n * @returns {Object} An object containing the offsets which will be applied to the popper\n */\nexport default function getReferenceOffsets(state, popper, reference, fixedPosition = null) {\n  const commonOffsetParent = fixedPosition ? getFixedPositionOffsetParent(popper) : findCommonOffsetParent(popper, getReferenceNode(reference));\n  return getOffsetRectRelativeToArbitraryNode(reference, commonOffsetParent, fixedPosition);\n}\n","/**\n * Get the outer sizes of the given element (offset size + margins)\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Object} object containing width and height properties\n */\nexport default function getOuterSizes(element) {\n  const window = element.ownerDocument.defaultView;\n  const styles = window.getComputedStyle(element);\n  const x = parseFloat(styles.marginTop || 0) + parseFloat(styles.marginBottom || 0);\n  const y = parseFloat(styles.marginLeft || 0) + parseFloat(styles.marginRight || 0);\n  const result = {\n    width: element.offsetWidth + y,\n    height: element.offsetHeight + x,\n  };\n  return result;\n}\n","/**\n * Get the opposite placement of the given one\n * @method\n * @memberof Popper.Utils\n * @argument {String} placement\n * @returns {String} flipped placement\n */\nexport default function getOppositePlacement(placement) {\n  const hash = { left: 'right', right: 'left', bottom: 'top', top: 'bottom' };\n  return placement.replace(/left|right|bottom|top/g, matched => hash[matched]);\n}\n","import getOuterSizes from './getOuterSizes';\nimport getOppositePlacement from './getOppositePlacement';\n\n/**\n * Get offsets to the popper\n * @method\n * @memberof Popper.Utils\n * @param {Object} position - CSS position the Popper will get applied\n * @param {HTMLElement} popper - the popper element\n * @param {Object} referenceOffsets - the reference offsets (the popper will be relative to this)\n * @param {String} placement - one of the valid placement options\n * @returns {Object} popperOffsets - An object containing the offsets which will be applied to the popper\n */\nexport default function getPopperOffsets(popper, referenceOffsets, placement) {\n  placement = placement.split('-')[0];\n\n  // Get popper node sizes\n  const popperRect = getOuterSizes(popper);\n\n  // Add position, width and height to our offsets object\n  const popperOffsets = {\n    width: popperRect.width,\n    height: popperRect.height,\n  };\n\n  // depending by the popper placement we have to compute its offsets slightly differently\n  const isHoriz = ['right', 'left'].indexOf(placement) !== -1;\n  const mainSide = isHoriz ? 'top' : 'left';\n  const secondarySide = isHoriz ? 'left' : 'top';\n  const measurement = isHoriz ? 'height' : 'width';\n  const secondaryMeasurement = !isHoriz ? 'height' : 'width';\n\n  popperOffsets[mainSide] =\n    referenceOffsets[mainSide] +\n    referenceOffsets[measurement] / 2 -\n    popperRect[measurement] / 2;\n  if (placement === secondarySide) {\n    popperOffsets[secondarySide] =\n      referenceOffsets[secondarySide] - popperRect[secondaryMeasurement];\n  } else {\n    popperOffsets[secondarySide] =\n      referenceOffsets[getOppositePlacement(secondarySide)];\n  }\n\n  return popperOffsets;\n}\n","/**\n * Mimics the `find` method of Array\n * @method\n * @memberof Popper.Utils\n * @argument {Array} arr\n * @argument prop\n * @argument value\n * @returns index or -1\n */\nexport default function find(arr, check) {\n  // use native find if supported\n  if (Array.prototype.find) {\n    return arr.find(check);\n  }\n\n  // use `filter` to obtain the same behavior of `find`\n  return arr.filter(check)[0];\n}\n","import find from './find';\n\n/**\n * Return the index of the matching object\n * @method\n * @memberof Popper.Utils\n * @argument {Array} arr\n * @argument prop\n * @argument value\n * @returns index or -1\n */\nexport default function findIndex(arr, prop, value) {\n  // use native findIndex if supported\n  if (Array.prototype.findIndex) {\n    return arr.findIndex(cur => cur[prop] === value);\n  }\n\n  // use `find` + `indexOf` if `findIndex` isn't supported\n  const match = find(arr, obj => obj[prop] === value);\n  return arr.indexOf(match);\n}\n","import isFunction from './isFunction';\nimport findIndex from './findIndex';\nimport getClientRect from '../utils/getClientRect';\n\n/**\n * Loop trough the list of modifiers and run them in order,\n * each of them will then edit the data object.\n * @method\n * @memberof Popper.Utils\n * @param {dataObject} data\n * @param {Array} modifiers\n * @param {String} ends - Optional modifier name used as stopper\n * @returns {dataObject}\n */\nexport default function runModifiers(modifiers, data, ends) {\n  const modifiersToRun = ends === undefined\n    ? modifiers\n    : modifiers.slice(0, findIndex(modifiers, 'name', ends));\n\n  modifiersToRun.forEach(modifier => {\n    if (modifier['function']) { // eslint-disable-line dot-notation\n      console.warn('`modifier.function` is deprecated, use `modifier.fn`!');\n    }\n    const fn = modifier['function'] || modifier.fn; // eslint-disable-line dot-notation\n    if (modifier.enabled && isFunction(fn)) {\n      // Add properties to offsets to make them a complete clientRect object\n      // we do this before each modifier to make sure the previous one doesn't\n      // mess with these values\n      data.offsets.popper = getClientRect(data.offsets.popper);\n      data.offsets.reference = getClientRect(data.offsets.reference);\n\n      data = fn(data, modifier);\n    }\n  });\n\n  return data;\n}\n","import computeAutoPlacement from '../utils/computeAutoPlacement';\nimport getReferenceOffsets from '../utils/getReferenceOffsets';\nimport getPopperOffsets from '../utils/getPopperOffsets';\nimport runModifiers from '../utils/runModifiers';\n\n/**\n * Updates the position of the popper, computing the new offsets and applying\n * the new style.<br />\n * Prefer `scheduleUpdate` over `update` because of performance reasons.\n * @method\n * @memberof Popper\n */\nexport default function update() {\n  // if popper is destroyed, don't perform any further update\n  if (this.state.isDestroyed) {\n    return;\n  }\n\n  let data = {\n    instance: this,\n    styles: {},\n    arrowStyles: {},\n    attributes: {},\n    flipped: false,\n    offsets: {},\n  };\n\n  // compute reference element offsets\n  data.offsets.reference = getReferenceOffsets(\n    this.state,\n    this.popper,\n    this.reference,\n    this.options.positionFixed\n  );\n\n  // compute auto placement, store placement inside the data object,\n  // modifiers will be able to edit `placement` if needed\n  // and refer to originalPlacement to know the original value\n  data.placement = computeAutoPlacement(\n    this.options.placement,\n    data.offsets.reference,\n    this.popper,\n    this.reference,\n    this.options.modifiers.flip.boundariesElement,\n    this.options.modifiers.flip.padding\n  );\n\n  // store the computed placement inside `originalPlacement`\n  data.originalPlacement = data.placement;\n\n  data.positionFixed = this.options.positionFixed;\n\n  // compute the popper offsets\n  data.offsets.popper = getPopperOffsets(\n    this.popper,\n    data.offsets.reference,\n    data.placement\n  );\n\n  data.offsets.popper.position = this.options.positionFixed\n    ? 'fixed'\n    : 'absolute';\n\n  // run the modifiers\n  data = runModifiers(this.modifiers, data);\n\n  // the first `update` will call `onCreate` callback\n  // the other ones will call `onUpdate` callback\n  if (!this.state.isCreated) {\n    this.state.isCreated = true;\n    this.options.onCreate(data);\n  } else {\n    this.options.onUpdate(data);\n  }\n}\n","/**\n * Helper used to know if the given modifier is enabled.\n * @method\n * @memberof Popper.Utils\n * @returns {Boolean}\n */\nexport default function isModifierEnabled(modifiers, modifierName) {\n  return modifiers.some(\n    ({ name, enabled }) => enabled && name === modifierName\n  );\n}\n","/**\n * Get the prefixed supported property name\n * @method\n * @memberof Popper.Utils\n * @argument {String} property (camelCase)\n * @returns {String} prefixed property (camelCase or PascalCase, depending on the vendor prefix)\n */\nexport default function getSupportedPropertyName(property) {\n  const prefixes = [false, 'ms', 'Webkit', 'Moz', 'O'];\n  const upperProp = property.charAt(0).toUpperCase() + property.slice(1);\n\n  for (let i = 0; i < prefixes.length; i++) {\n    const prefix = prefixes[i];\n    const toCheck = prefix ? `${prefix}${upperProp}` : property;\n    if (typeof document.body.style[toCheck] !== 'undefined') {\n      return toCheck;\n    }\n  }\n  return null;\n}\n","import isModifierEnabled from '../utils/isModifierEnabled';\nimport getSupportedPropertyName from '../utils/getSupportedPropertyName';\n\n/**\n * Destroys the popper.\n * @method\n * @memberof Popper\n */\nexport default function destroy() {\n  this.state.isDestroyed = true;\n\n  // touch DOM only if `applyStyle` modifier is enabled\n  if (isModifierEnabled(this.modifiers, 'applyStyle')) {\n    this.popper.removeAttribute('x-placement');\n    this.popper.style.position = '';\n    this.popper.style.top = '';\n    this.popper.style.left = '';\n    this.popper.style.right = '';\n    this.popper.style.bottom = '';\n    this.popper.style.willChange = '';\n    this.popper.style[getSupportedPropertyName('transform')] = '';\n  }\n\n  this.disableEventListeners();\n\n  // remove the popper if user explicitly asked for the deletion on destroy\n  // do not use `remove` because IE11 doesn't support it\n  if (this.options.removeOnDestroy) {\n    this.popper.parentNode.removeChild(this.popper);\n  }\n  return this;\n}\n","/**\n * Get the window associated with the element\n * @argument {Element} element\n * @returns {Window}\n */\nexport default function getWindow(element) {\n  const ownerDocument = element.ownerDocument;\n  return ownerDocument ? ownerDocument.defaultView : window;\n}\n","import getScrollParent from './getScrollParent';\nimport getWindow from './getWindow';\n\nfunction attachToScrollParents(scrollParent, event, callback, scrollParents) {\n  const isBody = scrollParent.nodeName === 'BODY';\n  const target = isBody ? scrollParent.ownerDocument.defaultView : scrollParent;\n  target.addEventListener(event, callback, { passive: true });\n\n  if (!isBody) {\n    attachToScrollParents(\n      getScrollParent(target.parentNode),\n      event,\n      callback,\n      scrollParents\n    );\n  }\n  scrollParents.push(target);\n}\n\n/**\n * Setup needed event listeners used to update the popper position\n * @method\n * @memberof Popper.Utils\n * @private\n */\nexport default function setupEventListeners(\n  reference,\n  options,\n  state,\n  updateBound\n) {\n  // Resize event listener on window\n  state.updateBound = updateBound;\n  getWindow(reference).addEventListener('resize', state.updateBound, { passive: true });\n\n  // Scroll event listener on scroll parents\n  const scrollElement = getScrollParent(reference);\n  attachToScrollParents(\n    scrollElement,\n    'scroll',\n    state.updateBound,\n    state.scrollParents\n  );\n  state.scrollElement = scrollElement;\n  state.eventsEnabled = true;\n\n  return state;\n}\n","import setupEventListeners from '../utils/setupEventListeners';\n\n/**\n * It will add resize/scroll events and start recalculating\n * position of the popper element when they are triggered.\n * @method\n * @memberof Popper\n */\nexport default function enableEventListeners() {\n  if (!this.state.eventsEnabled) {\n    this.state = setupEventListeners(\n      this.reference,\n      this.options,\n      this.state,\n      this.scheduleUpdate\n    );\n  }\n}\n","import getWindow from './getWindow';\n\n/**\n * Remove event listeners used to update the popper position\n * @method\n * @memberof Popper.Utils\n * @private\n */\nexport default function removeEventListeners(reference, state) {\n  // Remove resize event listener on window\n  getWindow(reference).removeEventListener('resize', state.updateBound);\n\n  // Remove scroll event listener on scroll parents\n  state.scrollParents.forEach(target => {\n    target.removeEventListener('scroll', state.updateBound);\n  });\n\n  // Reset state\n  state.updateBound = null;\n  state.scrollParents = [];\n  state.scrollElement = null;\n  state.eventsEnabled = false;\n  return state;\n}\n","import removeEventListeners from '../utils/removeEventListeners';\n\n/**\n * It will remove resize/scroll events and won't recalculate popper position\n * when they are triggered. It also won't trigger `onUpdate` callback anymore,\n * unless you call `update` method manually.\n * @method\n * @memberof Popper\n */\nexport default function disableEventListeners() {\n  if (this.state.eventsEnabled) {\n    cancelAnimationFrame(this.scheduleUpdate);\n    this.state = removeEventListeners(this.reference, this.state);\n  }\n}\n","/**\n * Tells if a given input is a number\n * @method\n * @memberof Popper.Utils\n * @param {*} input to check\n * @return {Boolean}\n */\nexport default function isNumeric(n) {\n  return n !== '' && !isNaN(parseFloat(n)) && isFinite(n);\n}\n","import isNumeric from './isNumeric';\n\n/**\n * Set the style to the given popper\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element - Element to apply the style to\n * @argument {Object} styles\n * Object with a list of properties and values which will be applied to the element\n */\nexport default function setStyles(element, styles) {\n  Object.keys(styles).forEach(prop => {\n    let unit = '';\n    // add unit if the value is numeric and is one of the following\n    if (\n      ['width', 'height', 'top', 'right', 'bottom', 'left'].indexOf(prop) !==\n        -1 &&\n      isNumeric(styles[prop])\n    ) {\n      unit = 'px';\n    }\n    element.style[prop] = styles[prop] + unit;\n  });\n}\n","/**\n * Set the attributes to the given popper\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element - Element to apply the attributes to\n * @argument {Object} styles\n * Object with a list of properties and values which will be applied to the element\n */\nexport default function setAttributes(element, attributes) {\n  Object.keys(attributes).forEach(function(prop) {\n    const value = attributes[prop];\n    if (value !== false) {\n      element.setAttribute(prop, attributes[prop]);\n    } else {\n      element.removeAttribute(prop);\n    }\n  });\n}\n","import setStyles from '../utils/setStyles';\nimport setAttributes from '../utils/setAttributes';\nimport getReferenceOffsets from '../utils/getReferenceOffsets';\nimport computeAutoPlacement from '../utils/computeAutoPlacement';\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} data.styles - List of style properties - values to apply to popper element\n * @argument {Object} data.attributes - List of attribute properties - values to apply to popper element\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The same data object\n */\nexport default function applyStyle(data) {\n  // any property present in `data.styles` will be applied to the popper,\n  // in this way we can make the 3rd party modifiers add custom styles to it\n  // Be aware, modifiers could override the properties defined in the previous\n  // lines of this modifier!\n  setStyles(data.instance.popper, data.styles);\n\n  // any property present in `data.attributes` will be applied to the popper,\n  // they will be set as HTML attributes of the element\n  setAttributes(data.instance.popper, data.attributes);\n\n  // if arrowElement is defined and arrowStyles has some properties\n  if (data.arrowElement && Object.keys(data.arrowStyles).length) {\n    setStyles(data.arrowElement, data.arrowStyles);\n  }\n\n  return data;\n}\n\n/**\n * Set the x-placement attribute before everything else because it could be used\n * to add margins to the popper margins needs to be calculated to get the\n * correct popper offsets.\n * @method\n * @memberof Popper.modifiers\n * @param {HTMLElement} reference - The reference element used to position the popper\n * @param {HTMLElement} popper - The HTML element used as popper\n * @param {Object} options - Popper.js options\n */\nexport function applyStyleOnLoad(\n  reference,\n  popper,\n  options,\n  modifierOptions,\n  state\n) {\n  // compute reference element offsets\n  const referenceOffsets = getReferenceOffsets(state, popper, reference, options.positionFixed);\n\n  // compute auto placement, store placement inside the data object,\n  // modifiers will be able to edit `placement` if needed\n  // and refer to originalPlacement to know the original value\n  const placement = computeAutoPlacement(\n    options.placement,\n    referenceOffsets,\n    popper,\n    reference,\n    options.modifiers.flip.boundariesElement,\n    options.modifiers.flip.padding\n  );\n\n  popper.setAttribute('x-placement', placement);\n\n  // Apply `position` to popper before anything else because\n  // without the position applied we can't guarantee correct computations\n  setStyles(popper, { position: options.positionFixed ? 'fixed' : 'absolute' });\n\n  return options;\n}\n","/**\n * @function\n * @memberof Popper.Utils\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Boolean} shouldRound - If the offsets should be rounded at all\n * @returns {Object} The popper's position offsets rounded\n *\n * The tale of pixel-perfect positioning. It's still not 100% perfect, but as\n * good as it can be within reason.\n * Discussion here: https://github.com/FezVrasta/popper.js/pull/715\n *\n * Low DPI screens cause a popper to be blurry if not using full pixels (Safari\n * as well on High DPI screens).\n *\n * Firefox prefers no rounding for positioning and does not have blurriness on\n * high DPI screens.\n *\n * Only horizontal placement and left/right values need to be considered.\n */\nexport default function getRoundedOffsets(data, shouldRound) {\n  const { popper, reference } = data.offsets;\n  const { round, floor } = Math;\n  const noRound = v => v;\n  \n  const referenceWidth = round(reference.width);\n  const popperWidth = round(popper.width);\n  \n  const isVertical = ['left', 'right'].indexOf(data.placement) !== -1;\n  const isVariation = data.placement.indexOf('-') !== -1;\n  const sameWidthParity = referenceWidth % 2 === popperWidth % 2;\n  const bothOddWidth = referenceWidth % 2 === 1 && popperWidth % 2 === 1;\n\n  const horizontalToInteger = !shouldRound\n    ? noRound\n    : isVertical || isVariation || sameWidthParity\n    ? round\n    : floor;\n  const verticalToInteger = !shouldRound ? noRound : round;\n\n  return {\n    left: horizontalToInteger(\n      bothOddWidth && !isVariation && shouldRound\n        ? popper.left - 1\n        : popper.left\n    ),\n    top: verticalToInteger(popper.top),\n    bottom: verticalToInteger(popper.bottom),\n    right: horizontalToInteger(popper.right),\n  };\n}\n","import getSupportedPropertyName from '../utils/getSupportedPropertyName';\nimport find from '../utils/find';\nimport getOffsetParent from '../utils/getOffsetParent';\nimport getBoundingClientRect from '../utils/getBoundingClientRect';\nimport getRoundedOffsets from '../utils/getRoundedOffsets';\nimport isBrowser from '../utils/isBrowser';\n\nconst isFirefox = isBrowser && /Firefox/i.test(navigator.userAgent);\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nexport default function computeStyle(data, options) {\n  const { x, y } = options;\n  const { popper } = data.offsets;\n\n  // Remove this legacy support in Popper.js v2\n  const legacyGpuAccelerationOption = find(\n    data.instance.modifiers,\n    modifier => modifier.name === 'applyStyle'\n  ).gpuAcceleration;\n  if (legacyGpuAccelerationOption !== undefined) {\n    console.warn(\n      'WARNING: `gpuAcceleration` option moved to `computeStyle` modifier and will not be supported in future versions of Popper.js!'\n    );\n  }\n  const gpuAcceleration =\n    legacyGpuAccelerationOption !== undefined\n      ? legacyGpuAccelerationOption\n      : options.gpuAcceleration;\n\n  const offsetParent = getOffsetParent(data.instance.popper);\n  const offsetParentRect = getBoundingClientRect(offsetParent);\n\n  // Styles\n  const styles = {\n    position: popper.position,\n  };\n\n  const offsets = getRoundedOffsets(\n    data,\n    window.devicePixelRatio < 2 || !isFirefox\n  );\n\n  const sideA = x === 'bottom' ? 'top' : 'bottom';\n  const sideB = y === 'right' ? 'left' : 'right';\n\n  // if gpuAcceleration is set to `true` and transform is supported,\n  //  we use `translate3d` to apply the position to the popper we\n  // automatically use the supported prefixed version if needed\n  const prefixedProperty = getSupportedPropertyName('transform');\n\n  // now, let's make a step back and look at this code closely (wtf?)\n  // If the content of the popper grows once it's been positioned, it\n  // may happen that the popper gets misplaced because of the new content\n  // overflowing its reference element\n  // To avoid this problem, we provide two options (x and y), which allow\n  // the consumer to define the offset origin.\n  // If we position a popper on top of a reference element, we can set\n  // `x` to `top` to make the popper grow towards its top instead of\n  // its bottom.\n  let left, top;\n  if (sideA === 'bottom') {\n    // when offsetParent is <html> the positioning is relative to the bottom of the screen (excluding the scrollbar)\n    // and not the bottom of the html element\n    if (offsetParent.nodeName === 'HTML') {\n      top = -offsetParent.clientHeight + offsets.bottom;\n    } else {\n      top = -offsetParentRect.height + offsets.bottom;\n    }\n  } else {\n    top = offsets.top;\n  }\n  if (sideB === 'right') {\n    if (offsetParent.nodeName === 'HTML') {\n      left = -offsetParent.clientWidth + offsets.right;\n    } else {\n      left = -offsetParentRect.width + offsets.right;\n    }\n  } else {\n    left = offsets.left;\n  }\n  if (gpuAcceleration && prefixedProperty) {\n    styles[prefixedProperty] = `translate3d(${left}px, ${top}px, 0)`;\n    styles[sideA] = 0;\n    styles[sideB] = 0;\n    styles.willChange = 'transform';\n  } else {\n    // othwerise, we use the standard `top`, `left`, `bottom` and `right` properties\n    const invertTop = sideA === 'bottom' ? -1 : 1;\n    const invertLeft = sideB === 'right' ? -1 : 1;\n    styles[sideA] = top * invertTop;\n    styles[sideB] = left * invertLeft;\n    styles.willChange = `${sideA}, ${sideB}`;\n  }\n\n  // Attributes\n  const attributes = {\n    'x-placement': data.placement,\n  };\n\n  // Update `data` attributes, styles and arrowStyles\n  data.attributes = { ...attributes, ...data.attributes };\n  data.styles = { ...styles, ...data.styles };\n  data.arrowStyles = { ...data.offsets.arrow, ...data.arrowStyles };\n\n  return data;\n}\n","import find from './find';\n\n/**\n * Helper used to know if the given modifier depends from another one.<br />\n * It checks if the needed modifier is listed and enabled.\n * @method\n * @memberof Popper.Utils\n * @param {Array} modifiers - list of modifiers\n * @param {String} requestingName - name of requesting modifier\n * @param {String} requestedName - name of requested modifier\n * @returns {Boolean}\n */\nexport default function isModifierRequired(\n  modifiers,\n  requestingName,\n  requestedName\n) {\n  const requesting = find(modifiers, ({ name }) => name === requestingName);\n\n  const isRequired =\n    !!requesting &&\n    modifiers.some(modifier => {\n      return (\n        modifier.name === requestedName &&\n        modifier.enabled &&\n        modifier.order < requesting.order\n      );\n    });\n\n  if (!isRequired) {\n    const requesting = `\\`${requestingName}\\``;\n    const requested = `\\`${requestedName}\\``;\n    console.warn(\n      `${requested} modifier is required by ${requesting} modifier in order to work, be sure to include it before ${requesting}!`\n    );\n  }\n  return isRequired;\n}\n","import getClientRect from '../utils/getClientRect';\nimport getOuterSizes from '../utils/getOuterSizes';\nimport isModifierRequired from '../utils/isModifierRequired';\nimport getStyleComputedProperty from '../utils/getStyleComputedProperty';\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nexport default function arrow(data, options) {\n  // arrow depends on keepTogether in order to work\n  if (!isModifierRequired(data.instance.modifiers, 'arrow', 'keepTogether')) {\n    return data;\n  }\n\n  let arrowElement = options.element;\n\n  // if arrowElement is a string, suppose it's a CSS selector\n  if (typeof arrowElement === 'string') {\n    arrowElement = data.instance.popper.querySelector(arrowElement);\n\n    // if arrowElement is not found, don't run the modifier\n    if (!arrowElement) {\n      return data;\n    }\n  } else {\n    // if the arrowElement isn't a query selector we must check that the\n    // provided DOM node is child of its popper node\n    if (!data.instance.popper.contains(arrowElement)) {\n      console.warn(\n        'WARNING: `arrow.element` must be child of its popper element!'\n      );\n      return data;\n    }\n  }\n\n  const placement = data.placement.split('-')[0];\n  const { popper, reference } = data.offsets;\n  const isVertical = ['left', 'right'].indexOf(placement) !== -1;\n\n  const len = isVertical ? 'height' : 'width';\n  const sideCapitalized = isVertical ? 'Top' : 'Left';\n  const side = sideCapitalized.toLowerCase();\n  const altSide = isVertical ? 'left' : 'top';\n  const opSide = isVertical ? 'bottom' : 'right';\n  const arrowElementSize = getOuterSizes(arrowElement)[len];\n\n  //\n  // extends keepTogether behavior making sure the popper and its\n  // reference have enough pixels in conjunction\n  //\n\n  // top/left side\n  if (reference[opSide] - arrowElementSize < popper[side]) {\n    data.offsets.popper[side] -=\n      popper[side] - (reference[opSide] - arrowElementSize);\n  }\n  // bottom/right side\n  if (reference[side] + arrowElementSize > popper[opSide]) {\n    data.offsets.popper[side] +=\n      reference[side] + arrowElementSize - popper[opSide];\n  }\n  data.offsets.popper = getClientRect(data.offsets.popper);\n\n  // compute center of the popper\n  const center = reference[side] + reference[len] / 2 - arrowElementSize / 2;\n\n  // Compute the sideValue using the updated popper offsets\n  // take popper margin in account because we don't have this info available\n  const css = getStyleComputedProperty(data.instance.popper);\n  const popperMarginSide = parseFloat(css[`margin${sideCapitalized}`]);\n  const popperBorderSide = parseFloat(css[`border${sideCapitalized}Width`]);\n  let sideValue =\n    center - data.offsets.popper[side] - popperMarginSide - popperBorderSide;\n\n  // prevent arrowElement from being placed not contiguously to its popper\n  sideValue = Math.max(Math.min(popper[len] - arrowElementSize, sideValue), 0);\n\n  data.arrowElement = arrowElement;\n  data.offsets.arrow = {\n    [side]: Math.round(sideValue),\n    [altSide]: '', // make sure to unset any eventual altSide value from the DOM node\n  };\n\n  return data;\n}\n","/**\n * Get the opposite placement variation of the given one\n * @method\n * @memberof Popper.Utils\n * @argument {String} placement variation\n * @returns {String} flipped placement variation\n */\nexport default function getOppositeVariation(variation) {\n  if (variation === 'end') {\n    return 'start';\n  } else if (variation === 'start') {\n    return 'end';\n  }\n  return variation;\n}\n","/**\n * List of accepted placements to use as values of the `placement` option.<br />\n * Valid placements are:\n * - `auto`\n * - `top`\n * - `right`\n * - `bottom`\n * - `left`\n *\n * Each placement can have a variation from this list:\n * - `-start`\n * - `-end`\n *\n * Variations are interpreted easily if you think of them as the left to right\n * written languages. Horizontally (`top` and `bottom`), `start` is left and `end`\n * is right.<br />\n * Vertically (`left` and `right`), `start` is top and `end` is bottom.\n *\n * Some valid examples are:\n * - `top-end` (on top of reference, right aligned)\n * - `right-start` (on right of reference, top aligned)\n * - `bottom` (on bottom, centered)\n * - `auto-end` (on the side with more space available, alignment depends by placement)\n *\n * @static\n * @type {Array}\n * @enum {String}\n * @readonly\n * @method placements\n * @memberof Popper\n */\nexport default [\n  'auto-start',\n  'auto',\n  'auto-end',\n  'top-start',\n  'top',\n  'top-end',\n  'right-start',\n  'right',\n  'right-end',\n  'bottom-end',\n  'bottom',\n  'bottom-start',\n  'left-end',\n  'left',\n  'left-start',\n];\n","import placements from '../methods/placements';\n\n// Get rid of `auto` `auto-start` and `auto-end`\nconst validPlacements = placements.slice(3);\n\n/**\n * Given an initial placement, returns all the subsequent placements\n * clockwise (or counter-clockwise).\n *\n * @method\n * @memberof Popper.Utils\n * @argument {String} placement - A valid placement (it accepts variations)\n * @argument {Boolean} counter - Set to true to walk the placements counterclockwise\n * @returns {Array} placements including their variations\n */\nexport default function clockwise(placement, counter = false) {\n  const index = validPlacements.indexOf(placement);\n  const arr = validPlacements\n    .slice(index + 1)\n    .concat(validPlacements.slice(0, index));\n  return counter ? arr.reverse() : arr;\n}\n","import getOppositePlacement from '../utils/getOppositePlacement';\nimport getOppositeVariation from '../utils/getOppositeVariation';\nimport getPopperOffsets from '../utils/getPopperOffsets';\nimport runModifiers from '../utils/runModifiers';\nimport getBoundaries from '../utils/getBoundaries';\nimport isModifierEnabled from '../utils/isModifierEnabled';\nimport clockwise from '../utils/clockwise';\n\nconst BEHAVIORS = {\n  FLIP: 'flip',\n  CLOCKWISE: 'clockwise',\n  COUNTERCLOCKWISE: 'counterclockwise',\n};\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nexport default function flip(data, options) {\n  // if `inner` modifier is enabled, we can't use the `flip` modifier\n  if (isModifierEnabled(data.instance.modifiers, 'inner')) {\n    return data;\n  }\n\n  if (data.flipped && data.placement === data.originalPlacement) {\n    // seems like flip is trying to loop, probably there's not enough space on any of the flippable sides\n    return data;\n  }\n\n  const boundaries = getBoundaries(\n    data.instance.popper,\n    data.instance.reference,\n    options.padding,\n    options.boundariesElement,\n    data.positionFixed\n  );\n\n  let placement = data.placement.split('-')[0];\n  let placementOpposite = getOppositePlacement(placement);\n  let variation = data.placement.split('-')[1] || '';\n\n  let flipOrder = [];\n\n  switch (options.behavior) {\n    case BEHAVIORS.FLIP:\n      flipOrder = [placement, placementOpposite];\n      break;\n    case BEHAVIORS.CLOCKWISE:\n      flipOrder = clockwise(placement);\n      break;\n    case BEHAVIORS.COUNTERCLOCKWISE:\n      flipOrder = clockwise(placement, true);\n      break;\n    default:\n      flipOrder = options.behavior;\n  }\n\n  flipOrder.forEach((step, index) => {\n    if (placement !== step || flipOrder.length === index + 1) {\n      return data;\n    }\n\n    placement = data.placement.split('-')[0];\n    placementOpposite = getOppositePlacement(placement);\n\n    const popperOffsets = data.offsets.popper;\n    const refOffsets = data.offsets.reference;\n\n    // using floor because the reference offsets may contain decimals we are not going to consider here\n    const floor = Math.floor;\n    const overlapsRef =\n      (placement === 'left' &&\n        floor(popperOffsets.right) > floor(refOffsets.left)) ||\n      (placement === 'right' &&\n        floor(popperOffsets.left) < floor(refOffsets.right)) ||\n      (placement === 'top' &&\n        floor(popperOffsets.bottom) > floor(refOffsets.top)) ||\n      (placement === 'bottom' &&\n        floor(popperOffsets.top) < floor(refOffsets.bottom));\n\n    const overflowsLeft = floor(popperOffsets.left) < floor(boundaries.left);\n    const overflowsRight = floor(popperOffsets.right) > floor(boundaries.right);\n    const overflowsTop = floor(popperOffsets.top) < floor(boundaries.top);\n    const overflowsBottom =\n      floor(popperOffsets.bottom) > floor(boundaries.bottom);\n\n    const overflowsBoundaries =\n      (placement === 'left' && overflowsLeft) ||\n      (placement === 'right' && overflowsRight) ||\n      (placement === 'top' && overflowsTop) ||\n      (placement === 'bottom' && overflowsBottom);\n\n    // flip the variation if required\n    const isVertical = ['top', 'bottom'].indexOf(placement) !== -1;\n\n    // flips variation if reference element overflows boundaries\n    const flippedVariationByRef =\n      !!options.flipVariations &&\n      ((isVertical && variation === 'start' && overflowsLeft) ||\n        (isVertical && variation === 'end' && overflowsRight) ||\n        (!isVertical && variation === 'start' && overflowsTop) ||\n        (!isVertical && variation === 'end' && overflowsBottom));\n\n    // flips variation if popper content overflows boundaries\n    const flippedVariationByContent =\n      !!options.flipVariationsByContent &&\n      ((isVertical && variation === 'start' && overflowsRight) ||\n        (isVertical && variation === 'end' && overflowsLeft) ||\n        (!isVertical && variation === 'start' && overflowsBottom) ||\n        (!isVertical && variation === 'end' && overflowsTop));\n\n    const flippedVariation = flippedVariationByRef || flippedVariationByContent;\n\n    if (overlapsRef || overflowsBoundaries || flippedVariation) {\n      // this boolean to detect any flip loop\n      data.flipped = true;\n\n      if (overlapsRef || overflowsBoundaries) {\n        placement = flipOrder[index + 1];\n      }\n\n      if (flippedVariation) {\n        variation = getOppositeVariation(variation);\n      }\n\n      data.placement = placement + (variation ? '-' + variation : '');\n\n      // this object contains `position`, we want to preserve it along with\n      // any additional property we may add in the future\n      data.offsets.popper = {\n        ...data.offsets.popper,\n        ...getPopperOffsets(\n          data.instance.popper,\n          data.offsets.reference,\n          data.placement\n        ),\n      };\n\n      data = runModifiers(data.instance.modifiers, data, 'flip');\n    }\n  });\n  return data;\n}\n","/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nexport default function keepTogether(data) {\n  const { popper, reference } = data.offsets;\n  const placement = data.placement.split('-')[0];\n  const floor = Math.floor;\n  const isVertical = ['top', 'bottom'].indexOf(placement) !== -1;\n  const side = isVertical ? 'right' : 'bottom';\n  const opSide = isVertical ? 'left' : 'top';\n  const measurement = isVertical ? 'width' : 'height';\n\n  if (popper[side] < floor(reference[opSide])) {\n    data.offsets.popper[opSide] =\n      floor(reference[opSide]) - popper[measurement];\n  }\n  if (popper[opSide] > floor(reference[side])) {\n    data.offsets.popper[opSide] = floor(reference[side]);\n  }\n\n  return data;\n}\n","import isNumeric from '../utils/isNumeric';\nimport getClientRect from '../utils/getClientRect';\nimport find from '../utils/find';\n\n/**\n * Converts a string containing value + unit into a px value number\n * @function\n * @memberof {modifiers~offset}\n * @private\n * @argument {String} str - Value + unit string\n * @argument {String} measurement - `height` or `width`\n * @argument {Object} popperOffsets\n * @argument {Object} referenceOffsets\n * @returns {Number|String}\n * Value in pixels, or original string if no values were extracted\n */\nexport function toValue(str, measurement, popperOffsets, referenceOffsets) {\n  // separate value from unit\n  const split = str.match(/((?:\\-|\\+)?\\d*\\.?\\d*)(.*)/);\n  const value = +split[1];\n  const unit = split[2];\n\n  // If it's not a number it's an operator, I guess\n  if (!value) {\n    return str;\n  }\n\n  if (unit.indexOf('%') === 0) {\n    let element;\n    switch (unit) {\n      case '%p':\n        element = popperOffsets;\n        break;\n      case '%':\n      case '%r':\n      default:\n        element = referenceOffsets;\n    }\n\n    const rect = getClientRect(element);\n    return rect[measurement] / 100 * value;\n  } else if (unit === 'vh' || unit === 'vw') {\n    // if is a vh or vw, we calculate the size based on the viewport\n    let size;\n    if (unit === 'vh') {\n      size = Math.max(\n        document.documentElement.clientHeight,\n        window.innerHeight || 0\n      );\n    } else {\n      size = Math.max(\n        document.documentElement.clientWidth,\n        window.innerWidth || 0\n      );\n    }\n    return size / 100 * value;\n  } else {\n    // if is an explicit pixel unit, we get rid of the unit and keep the value\n    // if is an implicit unit, it's px, and we return just the value\n    return value;\n  }\n}\n\n/**\n * Parse an `offset` string to extrapolate `x` and `y` numeric offsets.\n * @function\n * @memberof {modifiers~offset}\n * @private\n * @argument {String} offset\n * @argument {Object} popperOffsets\n * @argument {Object} referenceOffsets\n * @argument {String} basePlacement\n * @returns {Array} a two cells array with x and y offsets in numbers\n */\nexport function parseOffset(\n  offset,\n  popperOffsets,\n  referenceOffsets,\n  basePlacement\n) {\n  const offsets = [0, 0];\n\n  // Use height if placement is left or right and index is 0 otherwise use width\n  // in this way the first offset will use an axis and the second one\n  // will use the other one\n  const useHeight = ['right', 'left'].indexOf(basePlacement) !== -1;\n\n  // Split the offset string to obtain a list of values and operands\n  // The regex addresses values with the plus or minus sign in front (+10, -20, etc)\n  const fragments = offset.split(/(\\+|\\-)/).map(frag => frag.trim());\n\n  // Detect if the offset string contains a pair of values or a single one\n  // they could be separated by comma or space\n  const divider = fragments.indexOf(\n    find(fragments, frag => frag.search(/,|\\s/) !== -1)\n  );\n\n  if (fragments[divider] && fragments[divider].indexOf(',') === -1) {\n    console.warn(\n      'Offsets separated by white space(s) are deprecated, use a comma (,) instead.'\n    );\n  }\n\n  // If divider is found, we divide the list of values and operands to divide\n  // them by ofset X and Y.\n  const splitRegex = /\\s*,\\s*|\\s+/;\n  let ops = divider !== -1\n    ? [\n        fragments\n          .slice(0, divider)\n          .concat([fragments[divider].split(splitRegex)[0]]),\n        [fragments[divider].split(splitRegex)[1]].concat(\n          fragments.slice(divider + 1)\n        ),\n      ]\n    : [fragments];\n\n  // Convert the values with units to absolute pixels to allow our computations\n  ops = ops.map((op, index) => {\n    // Most of the units rely on the orientation of the popper\n    const measurement = (index === 1 ? !useHeight : useHeight)\n      ? 'height'\n      : 'width';\n    let mergeWithPrevious = false;\n    return (\n      op\n        // This aggregates any `+` or `-` sign that aren't considered operators\n        // e.g.: 10 + +5 => [10, +, +5]\n        .reduce((a, b) => {\n          if (a[a.length - 1] === '' && ['+', '-'].indexOf(b) !== -1) {\n            a[a.length - 1] = b;\n            mergeWithPrevious = true;\n            return a;\n          } else if (mergeWithPrevious) {\n            a[a.length - 1] += b;\n            mergeWithPrevious = false;\n            return a;\n          } else {\n            return a.concat(b);\n          }\n        }, [])\n        // Here we convert the string values into number values (in px)\n        .map(str => toValue(str, measurement, popperOffsets, referenceOffsets))\n    );\n  });\n\n  // Loop trough the offsets arrays and execute the operations\n  ops.forEach((op, index) => {\n    op.forEach((frag, index2) => {\n      if (isNumeric(frag)) {\n        offsets[index] += frag * (op[index2 - 1] === '-' ? -1 : 1);\n      }\n    });\n  });\n  return offsets;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @argument {Number|String} options.offset=0\n * The offset value as described in the modifier description\n * @returns {Object} The data object, properly modified\n */\nexport default function offset(data, { offset }) {\n  const { placement, offsets: { popper, reference } } = data;\n  const basePlacement = placement.split('-')[0];\n\n  let offsets;\n  if (isNumeric(+offset)) {\n    offsets = [+offset, 0];\n  } else {\n    offsets = parseOffset(offset, popper, reference, basePlacement);\n  }\n\n  if (basePlacement === 'left') {\n    popper.top += offsets[0];\n    popper.left -= offsets[1];\n  } else if (basePlacement === 'right') {\n    popper.top += offsets[0];\n    popper.left += offsets[1];\n  } else if (basePlacement === 'top') {\n    popper.left += offsets[0];\n    popper.top -= offsets[1];\n  } else if (basePlacement === 'bottom') {\n    popper.left += offsets[0];\n    popper.top += offsets[1];\n  }\n\n  data.popper = popper;\n  return data;\n}\n","import getOffsetParent from '../utils/getOffsetParent';\nimport getBoundaries from '../utils/getBoundaries';\nimport getSupportedPropertyName from '../utils/getSupportedPropertyName';\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nexport default function preventOverflow(data, options) {\n  let boundariesElement =\n    options.boundariesElement || getOffsetParent(data.instance.popper);\n\n  // If offsetParent is the reference element, we really want to\n  // go one step up and use the next offsetParent as reference to\n  // avoid to make this modifier completely useless and look like broken\n  if (data.instance.reference === boundariesElement) {\n    boundariesElement = getOffsetParent(boundariesElement);\n  }\n\n  // NOTE: DOM access here\n  // resets the popper's position so that the document size can be calculated excluding\n  // the size of the popper element itself\n  const transformProp = getSupportedPropertyName('transform');\n  const popperStyles = data.instance.popper.style; // assignment to help minification\n  const { top, left, [transformProp]: transform } = popperStyles;\n  popperStyles.top = '';\n  popperStyles.left = '';\n  popperStyles[transformProp] = '';\n\n  const boundaries = getBoundaries(\n    data.instance.popper,\n    data.instance.reference,\n    options.padding,\n    boundariesElement,\n    data.positionFixed\n  );\n\n  // NOTE: DOM access here\n  // restores the original style properties after the offsets have been computed\n  popperStyles.top = top;\n  popperStyles.left = left;\n  popperStyles[transformProp] = transform;\n\n  options.boundaries = boundaries;\n\n  const order = options.priority;\n  let popper = data.offsets.popper;\n\n  const check = {\n    primary(placement) {\n      let value = popper[placement];\n      if (\n        popper[placement] < boundaries[placement] &&\n        !options.escapeWithReference\n      ) {\n        value = Math.max(popper[placement], boundaries[placement]);\n      }\n      return { [placement]: value };\n    },\n    secondary(placement) {\n      const mainSide = placement === 'right' ? 'left' : 'top';\n      let value = popper[mainSide];\n      if (\n        popper[placement] > boundaries[placement] &&\n        !options.escapeWithReference\n      ) {\n        value = Math.min(\n          popper[mainSide],\n          boundaries[placement] -\n            (placement === 'right' ? popper.width : popper.height)\n        );\n      }\n      return { [mainSide]: value };\n    },\n  };\n\n  order.forEach(placement => {\n    const side =\n      ['left', 'top'].indexOf(placement) !== -1 ? 'primary' : 'secondary';\n    popper = { ...popper, ...check[side](placement) };\n  });\n\n  data.offsets.popper = popper;\n\n  return data;\n}\n","/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nexport default function shift(data) {\n  const placement = data.placement;\n  const basePlacement = placement.split('-')[0];\n  const shiftvariation = placement.split('-')[1];\n\n  // if shift shiftvariation is specified, run the modifier\n  if (shiftvariation) {\n    const { reference, popper } = data.offsets;\n    const isVertical = ['bottom', 'top'].indexOf(basePlacement) !== -1;\n    const side = isVertical ? 'left' : 'top';\n    const measurement = isVertical ? 'width' : 'height';\n\n    const shiftOffsets = {\n      start: { [side]: reference[side] },\n      end: {\n        [side]: reference[side] + reference[measurement] - popper[measurement],\n      },\n    };\n\n    data.offsets.popper = { ...popper, ...shiftOffsets[shiftvariation] };\n  }\n\n  return data;\n}\n","import isModifierRequired from '../utils/isModifierRequired';\nimport find from '../utils/find';\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nexport default function hide(data) {\n  if (!isModifierRequired(data.instance.modifiers, 'hide', 'preventOverflow')) {\n    return data;\n  }\n\n  const refRect = data.offsets.reference;\n  const bound = find(\n    data.instance.modifiers,\n    modifier => modifier.name === 'preventOverflow'\n  ).boundaries;\n\n  if (\n    refRect.bottom < bound.top ||\n    refRect.left > bound.right ||\n    refRect.top > bound.bottom ||\n    refRect.right < bound.left\n  ) {\n    // Avoid unnecessary DOM access if visibility hasn't changed\n    if (data.hide === true) {\n      return data;\n    }\n\n    data.hide = true;\n    data.attributes['x-out-of-boundaries'] = '';\n  } else {\n    // Avoid unnecessary DOM access if visibility hasn't changed\n    if (data.hide === false) {\n      return data;\n    }\n\n    data.hide = false;\n    data.attributes['x-out-of-boundaries'] = false;\n  }\n\n  return data;\n}\n","import getClientRect from '../utils/getClientRect';\nimport getOppositePlacement from '../utils/getOppositePlacement';\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nexport default function inner(data) {\n  const placement = data.placement;\n  const basePlacement = placement.split('-')[0];\n  const { popper, reference } = data.offsets;\n  const isHoriz = ['left', 'right'].indexOf(basePlacement) !== -1;\n\n  const subtractLength = ['top', 'left'].indexOf(basePlacement) === -1;\n\n  popper[isHoriz ? 'left' : 'top'] =\n    reference[basePlacement] -\n    (subtractLength ? popper[isHoriz ? 'width' : 'height'] : 0);\n\n  data.placement = getOppositePlacement(placement);\n  data.offsets.popper = getClientRect(popper);\n\n  return data;\n}\n","import applyStyle, { applyStyleOnLoad } from './applyStyle';\nimport computeStyle from './computeStyle';\nimport arrow from './arrow';\nimport flip from './flip';\nimport keepTogether from './keepTogether';\nimport offset from './offset';\nimport preventOverflow from './preventOverflow';\nimport shift from './shift';\nimport hide from './hide';\nimport inner from './inner';\n\n/**\n * Modifier function, each modifier can have a function of this type assigned\n * to its `fn` property.<br />\n * These functions will be called on each update, this means that you must\n * make sure they are performant enough to avoid performance bottlenecks.\n *\n * @function ModifierFn\n * @argument {dataObject} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {dataObject} The data object, properly modified\n */\n\n/**\n * Modifiers are plugins used to alter the behavior of your poppers.<br />\n * Popper.js uses a set of 9 modifiers to provide all the basic functionalities\n * needed by the library.\n *\n * Usually you don't want to override the `order`, `fn` and `onLoad` props.\n * All the other properties are configurations that could be tweaked.\n * @namespace modifiers\n */\nexport default {\n  /**\n   * Modifier used to shift the popper on the start or end of its reference\n   * element.<br />\n   * It will read the variation of the `placement` property.<br />\n   * It can be one either `-end` or `-start`.\n   * @memberof modifiers\n   * @inner\n   */\n  shift: {\n    /** @prop {number} order=100 - Index used to define the order of execution */\n    order: 100,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: shift,\n  },\n\n  /**\n   * The `offset` modifier can shift your popper on both its axis.\n   *\n   * It accepts the following units:\n   * - `px` or unit-less, interpreted as pixels\n   * - `%` or `%r`, percentage relative to the length of the reference element\n   * - `%p`, percentage relative to the length of the popper element\n   * - `vw`, CSS viewport width unit\n   * - `vh`, CSS viewport height unit\n   *\n   * For length is intended the main axis relative to the placement of the popper.<br />\n   * This means that if the placement is `top` or `bottom`, the length will be the\n   * `width`. In case of `left` or `right`, it will be the `height`.\n   *\n   * You can provide a single value (as `Number` or `String`), or a pair of values\n   * as `String` divided by a comma or one (or more) white spaces.<br />\n   * The latter is a deprecated method because it leads to confusion and will be\n   * removed in v2.<br />\n   * Additionally, it accepts additions and subtractions between different units.\n   * Note that multiplications and divisions aren't supported.\n   *\n   * Valid examples are:\n   * ```\n   * 10\n   * '10%'\n   * '10, 10'\n   * '10%, 10'\n   * '10 + 10%'\n   * '10 - 5vh + 3%'\n   * '-10px + 5vh, 5px - 6%'\n   * ```\n   * > **NB**: If you desire to apply offsets to your poppers in a way that may make them overlap\n   * > with their reference element, unfortunately, you will have to disable the `flip` modifier.\n   * > You can read more on this at this [issue](https://github.com/FezVrasta/popper.js/issues/373).\n   *\n   * @memberof modifiers\n   * @inner\n   */\n  offset: {\n    /** @prop {number} order=200 - Index used to define the order of execution */\n    order: 200,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: offset,\n    /** @prop {Number|String} offset=0\n     * The offset value as described in the modifier description\n     */\n    offset: 0,\n  },\n\n  /**\n   * Modifier used to prevent the popper from being positioned outside the boundary.\n   *\n   * A scenario exists where the reference itself is not within the boundaries.<br />\n   * We can say it has \"escaped the boundaries\" — or just \"escaped\".<br />\n   * In this case we need to decide whether the popper should either:\n   *\n   * - detach from the reference and remain \"trapped\" in the boundaries, or\n   * - if it should ignore the boundary and \"escape with its reference\"\n   *\n   * When `escapeWithReference` is set to`true` and reference is completely\n   * outside its boundaries, the popper will overflow (or completely leave)\n   * the boundaries in order to remain attached to the edge of the reference.\n   *\n   * @memberof modifiers\n   * @inner\n   */\n  preventOverflow: {\n    /** @prop {number} order=300 - Index used to define the order of execution */\n    order: 300,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: preventOverflow,\n    /**\n     * @prop {Array} [priority=['left','right','top','bottom']]\n     * Popper will try to prevent overflow following these priorities by default,\n     * then, it could overflow on the left and on top of the `boundariesElement`\n     */\n    priority: ['left', 'right', 'top', 'bottom'],\n    /**\n     * @prop {number} padding=5\n     * Amount of pixel used to define a minimum distance between the boundaries\n     * and the popper. This makes sure the popper always has a little padding\n     * between the edges of its container\n     */\n    padding: 5,\n    /**\n     * @prop {String|HTMLElement} boundariesElement='scrollParent'\n     * Boundaries used by the modifier. Can be `scrollParent`, `window`,\n     * `viewport` or any DOM element.\n     */\n    boundariesElement: 'scrollParent',\n  },\n\n  /**\n   * Modifier used to make sure the reference and its popper stay near each other\n   * without leaving any gap between the two. Especially useful when the arrow is\n   * enabled and you want to ensure that it points to its reference element.\n   * It cares only about the first axis. You can still have poppers with margin\n   * between the popper and its reference element.\n   * @memberof modifiers\n   * @inner\n   */\n  keepTogether: {\n    /** @prop {number} order=400 - Index used to define the order of execution */\n    order: 400,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: keepTogether,\n  },\n\n  /**\n   * This modifier is used to move the `arrowElement` of the popper to make\n   * sure it is positioned between the reference element and its popper element.\n   * It will read the outer size of the `arrowElement` node to detect how many\n   * pixels of conjunction are needed.\n   *\n   * It has no effect if no `arrowElement` is provided.\n   * @memberof modifiers\n   * @inner\n   */\n  arrow: {\n    /** @prop {number} order=500 - Index used to define the order of execution */\n    order: 500,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: arrow,\n    /** @prop {String|HTMLElement} element='[x-arrow]' - Selector or node used as arrow */\n    element: '[x-arrow]',\n  },\n\n  /**\n   * Modifier used to flip the popper's placement when it starts to overlap its\n   * reference element.\n   *\n   * Requires the `preventOverflow` modifier before it in order to work.\n   *\n   * **NOTE:** this modifier will interrupt the current update cycle and will\n   * restart it if it detects the need to flip the placement.\n   * @memberof modifiers\n   * @inner\n   */\n  flip: {\n    /** @prop {number} order=600 - Index used to define the order of execution */\n    order: 600,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: flip,\n    /**\n     * @prop {String|Array} behavior='flip'\n     * The behavior used to change the popper's placement. It can be one of\n     * `flip`, `clockwise`, `counterclockwise` or an array with a list of valid\n     * placements (with optional variations)\n     */\n    behavior: 'flip',\n    /**\n     * @prop {number} padding=5\n     * The popper will flip if it hits the edges of the `boundariesElement`\n     */\n    padding: 5,\n    /**\n     * @prop {String|HTMLElement} boundariesElement='viewport'\n     * The element which will define the boundaries of the popper position.\n     * The popper will never be placed outside of the defined boundaries\n     * (except if `keepTogether` is enabled)\n     */\n    boundariesElement: 'viewport',\n    /**\n     * @prop {Boolean} flipVariations=false\n     * The popper will switch placement variation between `-start` and `-end` when\n     * the reference element overlaps its boundaries.\n     *\n     * The original placement should have a set variation.\n     */\n    flipVariations: false,\n    /**\n     * @prop {Boolean} flipVariationsByContent=false\n     * The popper will switch placement variation between `-start` and `-end` when\n     * the popper element overlaps its reference boundaries.\n     *\n     * The original placement should have a set variation.\n     */\n    flipVariationsByContent: false,\n  },\n\n  /**\n   * Modifier used to make the popper flow toward the inner of the reference element.\n   * By default, when this modifier is disabled, the popper will be placed outside\n   * the reference element.\n   * @memberof modifiers\n   * @inner\n   */\n  inner: {\n    /** @prop {number} order=700 - Index used to define the order of execution */\n    order: 700,\n    /** @prop {Boolean} enabled=false - Whether the modifier is enabled or not */\n    enabled: false,\n    /** @prop {ModifierFn} */\n    fn: inner,\n  },\n\n  /**\n   * Modifier used to hide the popper when its reference element is outside of the\n   * popper boundaries. It will set a `x-out-of-boundaries` attribute which can\n   * be used to hide with a CSS selector the popper when its reference is\n   * out of boundaries.\n   *\n   * Requires the `preventOverflow` modifier before it in order to work.\n   * @memberof modifiers\n   * @inner\n   */\n  hide: {\n    /** @prop {number} order=800 - Index used to define the order of execution */\n    order: 800,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: hide,\n  },\n\n  /**\n   * Computes the style that will be applied to the popper element to gets\n   * properly positioned.\n   *\n   * Note that this modifier will not touch the DOM, it just prepares the styles\n   * so that `applyStyle` modifier can apply it. This separation is useful\n   * in case you need to replace `applyStyle` with a custom implementation.\n   *\n   * This modifier has `850` as `order` value to maintain backward compatibility\n   * with previous versions of Popper.js. Expect the modifiers ordering method\n   * to change in future major versions of the library.\n   *\n   * @memberof modifiers\n   * @inner\n   */\n  computeStyle: {\n    /** @prop {number} order=850 - Index used to define the order of execution */\n    order: 850,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: computeStyle,\n    /**\n     * @prop {Boolean} gpuAcceleration=true\n     * If true, it uses the CSS 3D transformation to position the popper.\n     * Otherwise, it will use the `top` and `left` properties\n     */\n    gpuAcceleration: true,\n    /**\n     * @prop {string} [x='bottom']\n     * Where to anchor the X axis (`bottom` or `top`). AKA X offset origin.\n     * Change this if your popper should grow in a direction different from `bottom`\n     */\n    x: 'bottom',\n    /**\n     * @prop {string} [x='left']\n     * Where to anchor the Y axis (`left` or `right`). AKA Y offset origin.\n     * Change this if your popper should grow in a direction different from `right`\n     */\n    y: 'right',\n  },\n\n  /**\n   * Applies the computed styles to the popper element.\n   *\n   * All the DOM manipulations are limited to this modifier. This is useful in case\n   * you want to integrate Popper.js inside a framework or view library and you\n   * want to delegate all the DOM manipulations to it.\n   *\n   * Note that if you disable this modifier, you must make sure the popper element\n   * has its position set to `absolute` before Popper.js can do its work!\n   *\n   * Just disable this modifier and define your own to achieve the desired effect.\n   *\n   * @memberof modifiers\n   * @inner\n   */\n  applyStyle: {\n    /** @prop {number} order=900 - Index used to define the order of execution */\n    order: 900,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: applyStyle,\n    /** @prop {Function} */\n    onLoad: applyStyleOnLoad,\n    /**\n     * @deprecated since version 1.10.0, the property moved to `computeStyle` modifier\n     * @prop {Boolean} gpuAcceleration=true\n     * If true, it uses the CSS 3D transformation to position the popper.\n     * Otherwise, it will use the `top` and `left` properties\n     */\n    gpuAcceleration: undefined,\n  },\n};\n\n/**\n * The `dataObject` is an object containing all the information used by Popper.js.\n * This object is passed to modifiers and to the `onCreate` and `onUpdate` callbacks.\n * @name dataObject\n * @property {Object} data.instance The Popper.js instance\n * @property {String} data.placement Placement applied to popper\n * @property {String} data.originalPlacement Placement originally defined on init\n * @property {Boolean} data.flipped True if popper has been flipped by flip modifier\n * @property {Boolean} data.hide True if the reference element is out of boundaries, useful to know when to hide the popper\n * @property {HTMLElement} data.arrowElement Node used as arrow by arrow modifier\n * @property {Object} data.styles Any CSS property defined here will be applied to the popper. It expects the JavaScript nomenclature (eg. `marginBottom`)\n * @property {Object} data.arrowStyles Any CSS property defined here will be applied to the popper arrow. It expects the JavaScript nomenclature (eg. `marginBottom`)\n * @property {Object} data.boundaries Offsets of the popper boundaries\n * @property {Object} data.offsets The measurements of popper, reference and arrow elements\n * @property {Object} data.offsets.popper `top`, `left`, `width`, `height` values\n * @property {Object} data.offsets.reference `top`, `left`, `width`, `height` values\n * @property {Object} data.offsets.arrow] `top` and `left` offsets, only one of them will be different from 0\n */\n","import modifiers from '../modifiers/index';\n\n/**\n * Default options provided to Popper.js constructor.<br />\n * These can be overridden using the `options` argument of Popper.js.<br />\n * To override an option, simply pass an object with the same\n * structure of the `options` object, as the 3rd argument. For example:\n * ```\n * new Popper(ref, pop, {\n *   modifiers: {\n *     preventOverflow: { enabled: false }\n *   }\n * })\n * ```\n * @type {Object}\n * @static\n * @memberof Popper\n */\nexport default {\n  /**\n   * Popper's placement.\n   * @prop {Popper.placements} placement='bottom'\n   */\n  placement: 'bottom',\n\n  /**\n   * Set this to true if you want popper to position it self in 'fixed' mode\n   * @prop {Boolean} positionFixed=false\n   */\n  positionFixed: false,\n\n  /**\n   * Whether events (resize, scroll) are initially enabled.\n   * @prop {Boolean} eventsEnabled=true\n   */\n  eventsEnabled: true,\n\n  /**\n   * Set to true if you want to automatically remove the popper when\n   * you call the `destroy` method.\n   * @prop {Boolean} removeOnDestroy=false\n   */\n  removeOnDestroy: false,\n\n  /**\n   * Callback called when the popper is created.<br />\n   * By default, it is set to no-op.<br />\n   * Access Popper.js instance with `data.instance`.\n   * @prop {onCreate}\n   */\n  onCreate: () => {},\n\n  /**\n   * Callback called when the popper is updated. This callback is not called\n   * on the initialization/creation of the popper, but only on subsequent\n   * updates.<br />\n   * By default, it is set to no-op.<br />\n   * Access Popper.js instance with `data.instance`.\n   * @prop {onUpdate}\n   */\n  onUpdate: () => {},\n\n  /**\n   * List of modifiers used to modify the offsets before they are applied to the popper.\n   * They provide most of the functionalities of Popper.js.\n   * @prop {modifiers}\n   */\n  modifiers,\n};\n\n/**\n * @callback onCreate\n * @param {dataObject} data\n */\n\n/**\n * @callback onUpdate\n * @param {dataObject} data\n */\n","// Utils\nimport debounce from './utils/debounce';\nimport isFunction from './utils/isFunction';\n\n// Methods\nimport update from './methods/update';\nimport destroy from './methods/destroy';\nimport enableEventListeners from './methods/enableEventListeners';\nimport disableEventListeners from './methods/disableEventListeners';\nimport Defaults from './methods/defaults';\nimport placements from './methods/placements';\n\nexport default class Popper {\n  /**\n   * Creates a new Popper.js instance.\n   * @class Popper\n   * @param {Element|referenceObject} reference - The reference element used to position the popper\n   * @param {Element} popper - The HTML / XML element used as the popper\n   * @param {Object} options - Your custom options to override the ones defined in [Defaults](#defaults)\n   * @return {Object} instance - The generated Popper.js instance\n   */\n  constructor(reference, popper, options = {}) {\n    // make update() debounced, so that it only runs at most once-per-tick\n    this.update = debounce(this.update.bind(this));\n\n    // with {} we create a new object with the options inside it\n    this.options = { ...Popper.Defaults, ...options };\n\n    // init state\n    this.state = {\n      isDestroyed: false,\n      isCreated: false,\n      scrollParents: [],\n    };\n\n    // get reference and popper elements (allow jQuery wrappers)\n    this.reference = reference && reference.jquery ? reference[0] : reference;\n    this.popper = popper && popper.jquery ? popper[0] : popper;\n\n    // Deep merge modifiers options\n    this.options.modifiers = {};\n    Object.keys({\n      ...Popper.Defaults.modifiers,\n      ...options.modifiers,\n    }).forEach(name => {\n      this.options.modifiers[name] = {\n        // If it's a built-in modifier, use it as base\n        ...(Popper.Defaults.modifiers[name] || {}),\n        // If there are custom options, override and merge with default ones\n        ...(options.modifiers ? options.modifiers[name] : {}),\n      };\n    });\n\n    // Refactoring modifiers' list (Object => Array)\n    this.modifiers = Object.keys(this.options.modifiers)\n      .map(name => ({\n        name,\n        ...this.options.modifiers[name],\n      }))\n      // sort the modifiers by order\n      .sort((a, b) => a.order - b.order);\n\n    // modifiers have the ability to execute arbitrary code when Popper.js get inited\n    // such code is executed in the same order of its modifier\n    // they could add new properties to their options configuration\n    // BE AWARE: don't add options to `options.modifiers.name` but to `modifierOptions`!\n    this.modifiers.forEach(modifierOptions => {\n      if (modifierOptions.enabled && isFunction(modifierOptions.onLoad)) {\n        modifierOptions.onLoad(\n          this.reference,\n          this.popper,\n          this.options,\n          modifierOptions,\n          this.state\n        );\n      }\n    });\n\n    // fire the first update to position the popper in the right place\n    this.update();\n\n    const eventsEnabled = this.options.eventsEnabled;\n    if (eventsEnabled) {\n      // setup event listeners, they will take care of update the position in specific situations\n      this.enableEventListeners();\n    }\n\n    this.state.eventsEnabled = eventsEnabled;\n  }\n\n  // We can't use class properties because they don't get listed in the\n  // class prototype and break stuff like Sinon stubs\n  update() {\n    return update.call(this);\n  }\n  destroy() {\n    return destroy.call(this);\n  }\n  enableEventListeners() {\n    return enableEventListeners.call(this);\n  }\n  disableEventListeners() {\n    return disableEventListeners.call(this);\n  }\n\n  /**\n   * Schedules an update. It will run on the next UI update available.\n   * @method scheduleUpdate\n   * @memberof Popper\n   */\n  scheduleUpdate = () => requestAnimationFrame(this.update);\n\n  /**\n   * Collection of utilities useful when writing custom modifiers.\n   * Starting from version 1.7, this method is available only if you\n   * include `popper-utils.js` before `popper.js`.\n   *\n   * **DEPRECATION**: This way to access PopperUtils is deprecated\n   * and will be removed in v2! Use the PopperUtils module directly instead.\n   * Due to the high instability of the methods contained in Utils, we can't\n   * guarantee them to follow semver. Use them at your own risk!\n   * @static\n   * @private\n   * @type {Object}\n   * @deprecated since version 1.8\n   * @member Utils\n   * @memberof Popper\n   */\n  static Utils = (typeof window !== 'undefined' ? window : global).PopperUtils;\n\n  static placements = placements;\n\n  static Defaults = Defaults;\n}\n\n/**\n * The `referenceObject` is an object that provides an interface compatible with Popper.js\n * and lets you use it as replacement of a real DOM node.<br />\n * You can use this method to position a popper relatively to a set of coordinates\n * in case you don't have a DOM node to use as reference.\n *\n * ```\n * new Popper(referenceObject, popperNode);\n * ```\n *\n * NB: This feature isn't supported in Internet Explorer 10.\n * @name referenceObject\n * @property {Function} data.getBoundingClientRect\n * A function that returns a set of coordinates compatible with the native `getBoundingClientRect` method.\n * @property {number} data.clientWidth\n * An ES6 getter that will return the width of the virtual reference element.\n * @property {number} data.clientHeight\n * An ES6 getter that will return the height of the virtual reference element.\n */\n","import Icon from './icon.vue';\nexport default Icon;","<template>\n    <i :class=\"classes\" :style=\"styles\"></i>\n</template>\n<script>\n    const prefixCls = 'ivu-icon';\n\n    export default {\n        name: 'Icon',\n        props: {\n            type: {\n                type: String,\n                default: ''\n            },\n            size: [Number, String],\n            color: String,\n            custom: {\n                type: String,\n                default: ''\n            }\n        },\n        computed: {\n            classes () {\n                return [\n                    `${prefixCls}`,\n                    {\n                        [`${prefixCls}-${this.type}`]: this.type !== '',\n                        [`${this.custom}`]: this.custom !== '',\n                    }\n                ];\n            },\n            styles () {\n                let style = {};\n\n                if (this.size) style['font-size'] = `${this.size}px`;\n\n                if (this.color) style.color = this.color;\n\n                return style;\n            }\n        }\n    };\n</script>\n","import { render } from \"./icon.vue?vue&type=template&id=855eb8a8\"\nimport script from \"./icon.vue?vue&type=script&lang=js\"\nexport * from \"./icon.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../../vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["isBrowser","window","document","navigator","timeoutDuration","longerTimeoutBrowsers","i","length","userAgent","indexOf","microtaskDebounce","fn","called","Promise","resolve","then","taskDebounce","scheduled","supportsMicroTasks","debounce","isFunction","functionToCheck","getType","toString","call","getStyleComputedProperty","element","property","nodeType","ownerDocument","defaultView","css","getComputedStyle","getParentNode","nodeName","parentNode","host","getScrollParent","body","overflow","_getStyleComputedProp","overflowX","overflowY","test","getReferenceNode","reference","referenceNode","isIE11","MSInputMethodContext","documentMode","isIE10","isIE","version","getOffsetParent","documentElement","noOffsetParent","offsetParent","nextElementSibling","isOffsetContainer","firstElementChild","getRoot","node","findCommonOffsetParent","element1","element2","order","compareDocumentPosition","Node","DOCUMENT_POSITION_FOLLOWING","start","end","range","createRange","setStart","setEnd","commonAncestorContainer","contains","element1root","getScroll","side","arguments","undefined","upperSide","html","scrollingElement","includeScroll","rect","subtract","scrollTop","scrollLeft","modifier","top","bottom","left","right","getBordersSize","styles","axis","sideA","sideB","parseFloat","getSize","computedStyle","Math","max","parseInt","getWindowSizes","getClientRect","offsets","width","height","getBoundingClientRect","e","result","sizes","clientWidth","clientHeight","horizScrollbar","offsetWidth","vertScrollbar","offsetHeight","getOffsetRectRelativeToArbitraryNode","children","parent","fixedPosition","isHTML","childrenRect","parentRect","scrollParent","borderTopWidth","borderLeftWidth","marginTop","marginLeft","getViewportOffsetRectRelativeToArtbitraryNode","excludeScroll","relativeOffset","innerWidth","innerHeight","offset","isFixed","getFixedPositionOffsetParent","parentElement","el","getBoundaries","popper","padding","boundariesElement","boundaries","boundariesNode","_getWindowSizes","isPaddingNumber","getArea","_ref","computeAutoPlacement","placement","refRect","rects","sortedAreas","Object","keys","map","key","sort","a","b","area","filteredAreas","filter","_ref2","computedPlacement","variation","split","getReferenceOffsets","state","commonOffsetParent","getOuterSizes","x","marginBottom","y","marginRight","getOppositePlacement","hash","replace","matched","getPopperOffsets","referenceOffsets","popperRect","popperOffsets","isHoriz","mainSide","secondarySide","measurement","secondaryMeasurement","find","arr","check","Array","prototype","findIndex","prop","value","cur","match","obj","runModifiers","modifiers","data","ends","modifiersToRun","slice","forEach","warn","enabled","update","this","isDestroyed","options","positionFixed","flip","originalPlacement","position","isCreated","onUpdate","onCreate","isModifierEnabled","modifierName","some","name","getSupportedPropertyName","prefixes","upperProp","charAt","toUpperCase","prefix","toCheck","style","destroy","removeAttribute","willChange","disableEventListeners","removeOnDestroy","removeChild","getWindow","attachToScrollParents","event","callback","scrollParents","isBody","target","addEventListener","passive","push","setupEventListeners","updateBound","scrollElement","eventsEnabled","enableEventListeners","scheduleUpdate","removeEventListeners","removeEventListener","isNumeric","n","isNaN","isFinite","setStyles","unit","setAttributes","attributes","setAttribute","applyStyle","instance","arrowElement","arrowStyles","applyStyleOnLoad","modifierOptions","getRoundedOffsets","shouldRound","_data$offsets","round","floor","noRound","v","referenceWidth","popperWidth","isVertical","isVariation","sameWidthParity","bothOddWidth","horizontalToInteger","verticalToInteger","isFirefox","computeStyle","legacyGpuAccelerationOption","gpuAcceleration","offsetParentRect","devicePixelRatio","prefixedProperty","invertTop","invertLeft","_extends","arrow","isModifierRequired","requestingName","requestedName","requesting","isRequired","_requesting","requested","querySelector","len","sideCapitalized","toLowerCase","altSide","opSide","arrowElementSize","center","popperMarginSide","popperBorderSide","sideValue","min","_data$offsets$arrow","defineProperty","getOppositeVariation","placements","validPlacements","clockwise","counter","index","concat","reverse","BEHAVIORS","flipped","placementOpposite","flipOrder","behavior","FLIP","CLOCKWISE","COUNTERCLOCKWISE","step","refOffsets","overlapsRef","overflowsLeft","overflowsRight","overflowsTop","overflowsBottom","overflowsBoundaries","flippedVariationByRef","flipVariations","flippedVariationByContent","flipVariationsByContent","flippedVariation","keepTogether","toValue","str","size","parseOffset","basePlacement","useHeight","fragments","frag","trim","divider","search","splitRegex","ops","op","mergeWithPrevious","reduce","index2","preventOverflow","transformProp","popperStyles","transform","priority","escapeWithReference","shift","shiftvariation","shiftOffsets","hide","bound","inner","subtractLength","Defaults","Popper","requestAnimationFrame","_this","bind","jquery","onLoad","Utils","global","PopperUtils","Icon","_createElementBlock","class","_normalizeClass","$options","classes","_normalizeStyle","prefixCls","props","type","String","default","Number","color","custom","computed","__exports__","render"],"sourceRoot":""}